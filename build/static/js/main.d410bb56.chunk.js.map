{"version":3,"sources":["assets/dancing-people.png","assets/logo.png","services/apollo/meteorAccountsLink.js","config/index.js","services/apollo/index.js","services/apollo/apolloClient.js","components/NavBar/index.js","components/Button/ActionButton.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Input/Input.jsx","components/Card/Card.jsx","pages/home/components/AndroidButton.jsx","pages/home/components/AppleButton.jsx","pages/home/components/HeroSection.jsx","pages/home/Home.jsx","pages/login/components/LoginForm.jsx","pages/login/Login.jsx","pages/register/components/RegisterForm.jsx","pages/register/Register.jsx","routing/routes.js","routing/components/RouteActions.jsx","store/user/index.js","routing/routeTypes.enum.js","routing/components/AuthenticatedRoute.jsx","App.js","index.js"],"names":["module","exports","ApolloLink","operation","forward","token","localStorage","getItem","setContext","request","headers","process","client","httpLinkOptions","uri","config","httpLink","createHttpLink","finalLink","concat","meteorAccountsLink","ApolloClient","link","cache","InMemoryCache","dataIdFromObject","object","_id","initialize","NavBar","className","to","alt","src","logo","ActionButton","backgroundColor","icon","title","text","style","iconStyle","size","color","ErrorMessage","name","message","Input","type","labelText","placeholder","console","log","field","form","meta","htmlFor","Card","children","classes","classNames","AndroidButton","href","faIcons","AppleButton","faAppleAlt","HeroSection","marginTop","Home","dancingPeople","styles","inputContainer","width","height","margin","border","borderRadius","padding","boxShadow","LoginForm","initialValues","validationSchema","onSubmit","handleSubmit","isSubmitting","values","errors","touched","handleChange","handleBlur","disabled","yup","shape","email","required","password","withApollo","history","onPress","cursor","obj","loginWithPassword","then","res","push","catch","err","RegisterForm","confirmPassword","routes","home","path","exact","component","login","Login","register","RouteActions","prevProps","this","props","location","pathname","window","scrollTo","Component","withRouter","loggedInToken","UserStore","observable","loggingIn","Boolean","authenticated","user","setUser","clear","action","routeTypes","observer","public","Route","App","apolloClient","_","map","appRoutes","route","index","RouteComponent","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d410bb56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dancing-people.6b76d391.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6a1d8876.png\";","import { ApolloLink } from 'apollo-link';\r\n\r\nexport default new ApolloLink((operation, forward) => {\r\n  const token = localStorage.getItem('Meteor.loginToken');\r\n\r\n  operation.setContext((request = {}) => ({\r\n    headers: { ...request.headers, 'meteor-login-token': token },\r\n  }));\r\n\r\n  return forward(operation);\r\n});\r\n","export default {\r\n  GRAPHQL_ENDPOINT: process.env.REACT_APP_GRAPHQL_ENDPOINT,\r\n};\r\n","import { initialize } from './apolloClient';\r\n\r\nconst { client } = initialize();\r\n\r\nexport default client;\r\n","import ApolloClient from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { concat } from 'apollo-link';\r\n\r\nimport meteorAccountsLink from './meteorAccountsLink';\r\nimport config from '../../config';\r\n\r\nexport function initialize() {\r\n  const httpLinkOptions = {\r\n    uri: config.GRAPHQL_ENDPOINT,\r\n  };\r\n\r\n  const httpLink = createHttpLink(httpLinkOptions);\r\n  const finalLink = concat(httpLink, meteorAccountsLink);\r\n\r\n  const client = new ApolloClient({\r\n    link: finalLink,\r\n    cache: new InMemoryCache({\r\n      dataIdFromObject: object => object._id || null,\r\n    }),\r\n  });\r\n\r\n  return {\r\n    client,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport './style.scss';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <header className=\"cc-navbar\">\r\n      <Link to=\"/\" className=\"cc-navbar--logo\">\r\n        <img alt=\"Logo\" src={logo} className=\"cc-navbar--logo_img\" />\r\n      </Link>\r\n      <div className=\"cc-navbar--links\">\r\n        <NavLink to=\"/login\" className=\"cc-navbar--link\">\r\n          Login\r\n        </NavLink>\r\n        <NavLink to=\"/register\" className=\"cc-navbar--link\">\r\n          Sign Up\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './style.scss';\r\n\r\nconst ActionButton = ({ backgroundColor, icon, title, text, style = {}, iconStyle = {}, size }) => {\r\n  return (\r\n    <div\r\n      className=\"cc-actionButton\"\r\n      style={{\r\n        backgroundColor,\r\n        ...style,\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={icon} style={iconStyle} size={size} />\r\n      <div className=\"cc-actionButton--card\">\r\n        <p className=\"dark-text\">\r\n          <b>\r\n            {title}\r\n          </b>\r\n        </p>\r\n        <p\r\n          style={{\r\n            color: '#4B4554',\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from 'react';\r\nimport { ErrorMessage as $ErrorMessage } from 'formik';\r\n\r\nimport './style.scss';\r\n\r\nconst ErrorMessage = ({ name }) => {\r\n  return (\r\n    <$ErrorMessage name={name}>\r\n      {message => (\r\n        <div>\r\n          <p className=\"cc-errorMessage\">{message}</p>\r\n        </div>\r\n      )}\r\n    </$ErrorMessage>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\n\r\nimport { ErrorMessage } from '../index';\r\nimport './style.scss';\r\n\r\nconst Input = ({ name, type, labelText = null, placeholder = null, style }) => {\r\n  console.log(style)\r\n  return (\r\n    <Field name={name}>\r\n      {({ field, form, meta }) => {\r\n        return (\r\n          <div className=\"cc-input--container\">\r\n            <label htmlFor={name}>{labelText}</label>\r\n            <input\r\n              type={type}\r\n              placeholder={placeholder}\r\n              className=\"cc-input_input\"\r\n              style={style}\r\n              {...field}\r\n            />\r\n            <ErrorMessage name={name} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './styles.scss';\r\n\r\nconst Card = ({ children, className }) => {\r\n  const classes = classNames('cc-card', className);\r\n  return <div className={classes}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { faIcons } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { ActionButton } from '../../../components';\r\n\r\nconst AndroidButton = () => {\r\n  return (\r\n    <a href=\"#\">\r\n      <ActionButton\r\n        backgroundColor=\"#F38181\"\r\n        title=\"Android\"\r\n        text=\"Download\"\r\n        icon={faIcons}\r\n        size={'2x'}\r\n        iconStyle={{\r\n          color: '#fbfbfb'\r\n        }}\r\n      />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AndroidButton;\r\n","import React from 'react';\r\n\r\nimport ActionButton from '../../../components/Button/ActionButton';\r\nimport { faAppleAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AppleButton = ({ style }) => {\r\n  return (\r\n    <a href=\"#\">\r\n      <ActionButton\r\n        backgroundColor=\"#756C83\"\r\n        title=\"iOS\"\r\n        text=\"Download\"\r\n        icon={faAppleAlt}\r\n        size={'2x'}\r\n        iconStyle={{\r\n          color: '#0c0b0e'\r\n        }}\r\n      />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AppleButton;\r\n","import React from 'react';\r\nimport AndroidButton from './AndroidButton';\r\nimport AppleButton from './AppleButton';\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div className=\"cc-home--hero\">\r\n      <h1 className=\"cc-home--hero_title\">\r\n        <span className=\"dark-text\">Retr</span>\r\n        <span className=\"primaryPink-text\">Up</span>\r\n      </h1>\r\n      <p className=\"cc-home--hero_action\">\r\n        Join local groups to meet people, try something new, or do more of what you love\r\n        with your friends, in a <span className=\"primaryPink-text\">retro</span> style\r\n      </p>\r\n      <div className=\"cc-home--hero_buttons\">\r\n        <AndroidButton />\r\n        <AppleButton\r\n          style={{\r\n            marginTop: '25px',\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from 'react';\r\n\r\nimport dancingPeople from '../../assets/dancing-people.png';\r\nimport HeroSection from './components/HeroSection';\r\nimport './style.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"cc-home\">\r\n      <HeroSection />\r\n      <div className=\"cc-home--image-container\">\r\n        <img alt=\"Dancing People\" src={dancingPeople} className=\"cc-home--image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Formik } from 'formik';\r\nimport React from 'react';\r\n\r\nimport { Input } from '../../../components';\r\n\r\nconst styles = {\r\n  inputContainer: {\r\n    width: '300px',\r\n    height: '40px',\r\n    margin: '12px 0',\r\n    border: '1px solid #E5E3E8',\r\n    borderRadius: '10px',\r\n    padding: '0 10px',\r\n    backgroundColor: '#F3F2F5',\r\n    boxShadow: '0 -2px rgba(0, 0, 0, 0.2)',\r\n  },\r\n};\r\n\r\nconst LoginForm = ({ initialValues, validationSchema, onSubmit }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        isSubmitting,\r\n      }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"cc-login--form\">\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter you email here\"\r\n              style={styles.inputContainer}\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password here\"\r\n              style={styles.inputContainer}\r\n            />\r\n            <button\r\n              type=\"Submit\"\r\n              disabled={isSubmitting}\r\n              className=\"cc-login--form_button\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport { loginWithPassword } from 'meteor-apollo-accounts';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport LoginForm from './components/LoginForm';\r\nimport { Card } from '../../components';\r\nimport './style.scss';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Please enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup.string().required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst Login = ({ history, client }) => {\r\n  const onSubmit = obj => {\r\n    loginWithPassword(obj, client)\r\n      .then(res => {\r\n        history.push('/dashboard');\r\n      })\r\n      .catch(err => {\r\n        const { message } = err;\r\n        console.log('err', err);\r\n        // if (message.indexOf('User not found') >= 0) {\r\n        //   return toast.error('User not found');\r\n        // }\r\n        // return toast.error('Something went wrong');\r\n      });\r\n  };\r\n\r\n  const onSignUp = () => {};\r\n\r\n  return (\r\n    <div className=\"cc-login\">\r\n      <Card className=\"cc-login_card\">\r\n        <h1 className=\"cc-login_title\">Log in</h1>\r\n        <h6 className=\"cc-login_description\">\r\n          If you are an organiser or admin. Don't have an account yet?{' '}\r\n          <span onPress={onSignUp} style={{ cursor: 'pointer', color: '#f38181' }}>\r\n            Sign up!\r\n          </span>\r\n        </h6>\r\n        <LoginForm\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n          initialValues={initialValues}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withApollo(Login);\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nconst RegisterForm = ({ initialValues, validationSchema, onSubmit } = {}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isSubmitting }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"cc-register--form\">\r\n            <button\r\n              type=\"Submit\"\r\n              disabled={isSubmitting}\r\n              className=\"cc-register--form_button\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport * as yup from 'yup';\r\n\r\nimport './style.scss';\r\nimport { Card } from '../../components';\r\nimport RegisterForm from './components/RegisterForm';\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\n\r\n// const validationSchema =\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"cc-register\">\r\n      <Card className=\"cc-register_card\">\r\n        <h1 className=\"cc-register_title\">Register</h1>\r\n        <RegisterForm initialValues={initialValues} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withApollo(Register);\r\n","import { Home, Login, Register } from '../pages';\r\n\r\nconst routes = {\r\n  home: {\r\n    path: '/',\r\n    exact: true,\r\n    type: 'public',\r\n    component: Home,\r\n  },\r\n  login: {\r\n    path: '/login',\r\n    exact: true,\r\n    type: 'public',\r\n    component: Login,\r\n  },\r\n  register: {\r\n    path: '/register',\r\n    exact: true,\r\n    type: 'public',\r\n    component: Register,\r\n  },\r\n};\r\n\r\nexport default routes;\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Switch } from 'react-router';\r\n\r\nclass RouteActions extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n\r\n    if (location.pathname !== prevProps.location.pathname) {\r\n      // this.setRouteClass(prevProps.location, location);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return <Switch>{children}</Switch>;\r\n  }\r\n}\r\nexport default withRouter(RouteActions);\r\n","import { action, observable } from 'mobx';\r\n\r\nconst loggedInToken = localStorage.getItem('Meteor.loginToken');\r\n\r\nconst UserStore = observable(\r\n  {\r\n    loggingIn: Boolean(loggedInToken),\r\n    authenticated: Boolean(loggedInToken),\r\n    user: {},\r\n    setUser(user) {\r\n      this.user = user;\r\n      this.loggingIn = false;\r\n      this.authenticated = true;\r\n    },\r\n    clear() {\r\n      this.loggingIn = false;\r\n      this.user = {};\r\n      this.authenticated = false;\r\n    },\r\n  },\r\n  {\r\n    setUser: action,\r\n    clear: action,\r\n  }\r\n);\r\n\r\nexport default UserStore;\r\n","import { Route } from 'react-router';\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\r\n\r\nconst routeTypes = {\r\n  authenticated: AuthenticatedRoute,\r\n  public: Route,\r\n};\r\n\r\nexport default routeTypes;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport UserStore from '../../store/user';\r\n\r\nconst AuthenticatedRoute = observer(({ path, exact, component, location }) => {\r\n  const { authenticated, loggingIn } = UserStore;\r\n\r\n  if (authenticated) {\r\n    return (\r\n      <Route\r\n        path={path}\r\n        exact={exact}\r\n        component={loggingIn ? <p>Loading...</p> : component}\r\n      />\r\n    );\r\n  }\r\n\r\n  let redirectLocation = '/login';\r\n\r\n  return <Redirect to={redirectLocation} />;\r\n});\r\n\r\nexport default AuthenticatedRoute;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport apolloClient from './services/apollo';\r\nimport { appRoutes, RouteActions, routeTypes } from './routing';\r\nimport { NavBar } from './components';\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={apolloClient}>\r\n      {/*<ToastContainer position={toast.POSITION.TOP_RIGHT} autoClose={5000} closeOnClick />*/}\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        <RouteActions>\r\n          {_.map(appRoutes, (route, index) => {\r\n            const RouteComponent = routeTypes[route.type];\r\n            if (RouteComponent) {\r\n              return (\r\n                <RouteComponent\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </RouteActions>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}